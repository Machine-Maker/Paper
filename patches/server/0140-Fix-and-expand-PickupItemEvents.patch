From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Sun, 7 May 2017 06:26:09 -0500
Subject: [PATCH] Fix and expand PickupItemEvents

Upstream deprecated PlayerPickupItemEvent while there was still
a valid subclass evnet of it. This is technically an API break
with upstream due to PlayerItemPickupEvent no longer extending
PlayerEvent, but rather EntityPickupItemEvent. All other functionality
should be the same regarding when each event is fired.

Co-authored-by: Jake Potrebic <jake.m.potrebic@gmail.com>

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index 9932e1f83f3c20f3b824dc535a162d105c0d6a68..f2987de7b7d24989e0e8a906d28e263b86eaf861 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -378,26 +378,33 @@ public class ItemEntity extends Entity {
             // CraftBukkit start - fire PlayerPickupItemEvent
             int canHold = player.getInventory().canHold(itemstack);
             int remaining = i - canHold;
+            boolean flyAtPlayer = false; // Paper
 
             if (this.pickupDelay <= 0 && canHold > 0) {
                 itemstack.setCount(canHold);
-                // Call legacy event
+                // Call legacy event // Paper - this is now the main event
                 PlayerPickupItemEvent playerEvent = new PlayerPickupItemEvent((org.bukkit.entity.Player) player.getBukkitEntity(), (org.bukkit.entity.Item) this.getBukkitEntity(), remaining);
                 playerEvent.setCancelled(!playerEvent.getPlayer().getCanPickupItems());
                 this.level.getCraftServer().getPluginManager().callEvent(playerEvent);
+                flyAtPlayer = playerEvent.getFlyAtPlayer(); // Paper
                 if (playerEvent.isCancelled()) {
                     itemstack.setCount(i); // SPIGOT-5294 - restore count
+                    // Paper Start
+                    if (flyAtPlayer) {
+                        player.take(this, i);
+                    }
+                    // Paper End
                     return;
                 }
 
-                // Call newer event afterwards
-                EntityPickupItemEvent entityEvent = new EntityPickupItemEvent((org.bukkit.entity.Player) player.getBukkitEntity(), (org.bukkit.entity.Item) this.getBukkitEntity(), remaining);
-                entityEvent.setCancelled(!entityEvent.getEntity().getCanPickupItems());
-                this.level.getCraftServer().getPluginManager().callEvent(entityEvent);
-                if (entityEvent.isCancelled()) {
-                    itemstack.setCount(i); // SPIGOT-5294 - restore count
-                    return;
-                }
+                // // Call newer event afterwards // Paper - don't call event twice
+                // EntityPickupItemEvent entityEvent = new EntityPickupItemEvent((org.bukkit.entity.Player) player.getBukkitEntity(), (org.bukkit.entity.Item) this.getBukkitEntity(), remaining);
+                // entityEvent.setCancelled(!entityEvent.getEntity().getCanPickupItems());
+                // this.level.getCraftServer().getPluginManager().callEvent(entityEvent);
+                // if (entityEvent.isCancelled()) {
+                //     itemstack.setCount(i); // SPIGOT-5294 - restore count
+                //     return;
+                // }
 
                 // Update the ItemStack if it was changed in the event
                 ItemStack current = this.getItem();
@@ -416,7 +423,11 @@ public class ItemEntity extends Entity {
             // CraftBukkit end
 
             if (this.pickupDelay == 0 && (this.owner == null || this.owner.equals(player.getUUID())) && player.getInventory().add(itemstack)) {
-                player.take(this, i);
+                // Paper Start
+                if (flyAtPlayer) {
+                    player.take(this, i);
+                }
+                // Paper End
                 if (itemstack.isEmpty()) {
                     this.discard();
                     itemstack.setCount(i);
